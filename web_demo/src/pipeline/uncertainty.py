# --- src/pipeline/uncertainty.py ---

import re

# --- Configuration ---
# List of keywords that indicate the model is uncertain. Case-insensitive.
UNCERTAINTY_KEYWORDS = [
    "not sure", "unsure", "cannot determine", "unclear", "difficult to say",
    "not confident", "could be", "might be", "appears to be", "seems like",
    "no diagnosis", "insufficient information"
]

# The minimum number of words a response must have to be considered confident.
MIN_RESPONSE_LENGTH_WORDS = 8

def is_uncertain(response: str) -> bool:
    """
    Checks if the model's response indicates uncertainty based on heuristics.

    Heuristics used:
    1. Checks if any uncertainty keywords are present in the response.
    2. Checks if the response length is below a minimum threshold.

    Args:
        response (str): The text generated by the model.

    Returns:
        bool: True if the response is deemed uncertain, False otherwise.
    """
    if not response:
        return True

    # Normalize the response to lowercase for case-insensitive matching
    lower_response = response.lower()

    # 1. Check for uncertainty keywords
    for keyword in UNCERTAINTY_KEYWORDS:
        if keyword in lower_response:
            print(f"⚠️ Uncertainty detected due to keyword: '{keyword}'")
            return True

    # 2. Check for response length
    word_count = len(re.findall(r'\w+', lower_response))
    if word_count < MIN_RESPONSE_LENGTH_WORDS:
        print(f"⚠️ Uncertainty detected due to short response length ({word_count} words).")
        return True

    # If no uncertainty flags were triggered, the response is considered confident
    print("✅ Response deemed confident.")
    return False

# --- Self-test block ---
if __name__ == '__main__':
    print("--- Running Uncertainty Detection Self-Test ---")
    
    confident_response = "The leaf is showing clear signs of Tomato Late Blight, characterized by large, dark brown lesions. You should apply fungicides containing mancozeb."
    uncertain_response_keyword = "I'm not sure, but it could be a type of blight."
    uncertain_response_short = "It is leaf curl."
    empty_response = ""

    print(f"\nTesting: \"{confident_response}\"")
    assert not is_uncertain(confident_response), "Test Failed: Confident response flagged as uncertain."

    print(f"\nTesting: \"{uncertain_response_keyword}\"")
    assert is_uncertain(uncertain_response_keyword), "Test Failed: Keyword uncertainty not detected."
    
    print(f"\nTesting: \"{uncertain_response_short}\"")
    assert is_uncertain(uncertain_response_short), "Test Failed: Short response uncertainty not detected."

    print(f"\nTesting: \"{empty_response}\"")
    assert is_uncertain(empty_response), "Test Failed: Empty response not detected as uncertain."

    print("\n--- ✅ All Self-Tests Passed ---")

